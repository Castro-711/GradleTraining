/*
    1. Add a copy task that copies all `*.txt` files under `content` and all files under images into `build/texts` (observe the preserved hierarchy).
    2. Add a section to the copy task from 1. that also copies all `*.dat` files under `content` and renames them to `*.data`.
       Hint: The rename regex is `"(.*)\\.dat"`.
*/

task copyStuff(type: Copy) {
    into("${buildDir}/texts") // groovy interpolation
    from('content') { // default behvaiour means the directory structure is maintained
        include '**/*.txt'
        include '**/*.dat'
        rename "(.*)\\.dat", '$1.data' // ensure single quotes here to avoid interpolation
    }
    from('images')
    includeEmptyDirs = false // this excludes directories that have files but don't meet above criteria too
    // this is an example of having being both a method and a property
    // in this example we are using the property but to use the method we could have done
    // includeEmptyDirs(false)
}

/*
Files can be transformed during a copy task
    * use filter with certain parameters to acheive this

Files can be renamed during a copy
    * checkout the samples !!!

You can include file permission within the copy task 

Can use Sync directories - except the target will only contain everything from source
    * you can use 'preserve' to keep certain existing files in the target

A copy task cannot delete a file
    * there is a delete task for that.!
    * has a property to follow symlinks
    * and many more
*/

task copyStuffPermission(type: Copy) {
    into("targetDir")
    into("bin") {
        from "src/bin"
        fileMode 0755
        dirMode 0755 // octal numbers - very important to avoid issuesâˆš
    }
}